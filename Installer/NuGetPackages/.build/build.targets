<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" >

  <Target Name="Build"/>
  <Target Name="Clean" />
  <Target Name="Rebuild" />


  <Target Name="Publish"/>
  <Target Name="GetNativeManifest" />
  <Target Name="GetCopyToOutputDirectoryItems" />


  <Target Name="AfterBuild" AfterTargets="Build" />

  <Target Name="GetGitVersion" BeforeTargets="NugetBuild">
    <CallTarget Targets="GetVersion" />
    <CallTarget Targets="UpdatePackageVersion" />
  </Target>

  <Target Name="UpdatePackageVersion" >
    <PropertyGroup>
      <SpecFlowPackageVersion Condition="'$(SpecFlowPackageVersion)' == ''">$(GitVersion_NuGetVersion)</SpecFlowPackageVersion>
      <NugetVersion>$(SpecFlowPackageVersion)</NugetVersion>
      <TechTalk_Year>$([System.DateTime]::get_Now().get_Year())</TechTalk_Year>
      <TechTalkCopyright>Copyright © 2009-$(TechTalk_Year) TechTalk</TechTalkCopyright>

    </PropertyGroup>

    <Message Importance="High" Text="GitVersion: $(GitVersion_NuGetVersion)" />
    <Message Importance="High" Text="NugetVersion: $(NugetVersion)" />

    <Copy SourceFiles="$(MSBuildThisFileDirectory)\..\..\..\TechTalk.SpecFlow.Tools\MsBuild\TechTalk.SpecFlow.targets" DestinationFiles="$(TargetDir)SpecFlow.Tools.MsBuild.Generation\build\SpecFlow.Tools.MsBuild.Generation.targets" OverwriteReadOnlyFiles="true"  />
    <Copy SourceFiles="$(MSBuildThisFileDirectory)\..\..\..\TechTalk.SpecFlow.Tools\MsBuild\TechTalk.SpecFlow.props" DestinationFiles="$(TargetDir)SpecFlow.Tools.MsBuild.Generation\build\SpecFlow.Tools.MsBuild.Generation.props" OverwriteReadOnlyFiles="true"  />
    <ReplaceFileText InputFilename="$(TargetDir)SpecFlow.Tools.MsBuild.Generation\build\SpecFlow.Tools.MsBuild.Generation.targets" OutputFilename="$(TargetDir)SpecFlow.Tools.MsBuild.Generation\build\SpecFlow.Tools.MsBuild.Generation.targets" MatchExpression="TechTalk.SpecFlow.props" ReplacementText="SpecFlow.Tools.MsBuild.Generation.props" />

    <XmlPoke Condition="'$(SpecFlowPackageVersion)' != ''" XmlInputPath="$(TargetDir)SpecFlow.CustomPlugin\SpecFlow.CustomPlugin.nuspec" Namespaces="&lt;Namespace Prefix='ng' Uri='http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd' /&gt;" Query="//ng:dependency[@id='SpecFlow']/@version" Value="[$(SpecFlowPackageVersion)]" />
    <XmlPoke Condition="'$(SpecFlowPackageVersion)' != ''" XmlInputPath="$(TargetDir)SpecFlow.MsTest\SpecFlow.MsTest.nuspec" Namespaces="&lt;Namespace Prefix='ng' Uri='http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd' /&gt;" Query="//ng:dependency[@id='SpecFlow']/@version" Value="[$(SpecFlowPackageVersion)]" />
    <XmlPoke Condition="'$(SpecFlowPackageVersion)' != ''" XmlInputPath="$(TargetDir)SpecFlow.NUnit\SpecFlow.NUnit.nuspec" Namespaces="&lt;Namespace Prefix='ng' Uri='http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd' /&gt;" Query="//ng:dependency[@id='SpecFlow']/@version" Value="[$(SpecFlowPackageVersion)]" />
    <XmlPoke Condition="'$(SpecFlowPackageVersion)' != ''" XmlInputPath="$(TargetDir)SpecFlow.xUnit\SpecFlow.xUnit.nuspec" Namespaces="&lt;Namespace Prefix='ng' Uri='http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd' /&gt;" Query="//ng:dependency[@id='SpecFlow']/@version" Value="[$(SpecFlowPackageVersion)]" />
    <XmlPoke Condition="'$(SpecFlowPackageVersion)' != ''" XmlInputPath="$(TargetDir)SpecFlow.NUnit.Runners\SpecFlow.NUnit.Runners.nuspec" Namespaces="&lt;Namespace Prefix='ng' Uri='http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd' /&gt;" Query="//ng:dependency[@id='SpecFlow.NUnit']/@version" Value="[$(SpecFlowPackageVersion)]" />
    <XmlPoke Condition="'$(SpecFlowPackageVersion)' != ''" XmlInputPath="$(TargetDir)SpecFlow.Tools.MsBuild.Generation\SpecFlow.Tools.MsBuild.Generation.nuspec" Namespaces="&lt;Namespace Prefix='ng' Uri='http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd' /&gt;" Query="//ng:dependency[@id='SpecFlow']/@version" Value="[$(SpecFlowPackageVersion)]" />
  </Target>

  <UsingTask TaskName="ReplaceFileText" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
    <ParameterGroup>
      <InputFilename ParameterType="System.String" Required="true" />
      <OutputFilename ParameterType="System.String" Required="true" />
      <MatchExpression ParameterType="System.String" Required="true" />
      <ReplacementText ParameterType="System.String" Required="true" />
    </ParameterGroup>
    <Task>
      <Reference Include="System.Core" />
      <Using Namespace="System" />
      <Using Namespace="System.IO" />
      <Using Namespace="System.Text.RegularExpressions" />
      <Code Type="Fragment" Language="cs">
        <![CDATA[
              File.WriteAllText(
                  OutputFilename,
                  Regex.Replace(File.ReadAllText(InputFilename), MatchExpression, ReplacementText)
                  );
            ]]>
      </Code>
    </Task>
  </UsingTask>

</Project>
