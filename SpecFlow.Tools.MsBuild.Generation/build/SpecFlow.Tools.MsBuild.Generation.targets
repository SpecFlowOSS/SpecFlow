<Project>

  <Import Project="SpecFlow.Tools.MsBuild.Generation.props"/>

  <PropertyGroup>
    <BuildDependsOn>
      GenerateSpecFlowCodeFiles;
      $(BuildDependsOn)
    </BuildDependsOn>
    <CleanDependsOn>
      CleanGeneratedSpecFlowCodeFiles;
      $(CleanDependsOn)
    </CleanDependsOn>
  </PropertyGroup>
  
  <PropertyGroup>
    <GenerateSpecFlowCodeFilesDependsOn>EnsureLegacySpecFlowCodeGenerationIsDisabled</GenerateSpecFlowCodeFilesDependsOn>
  </PropertyGroup>
  
  <!-- 
  Processes the SpecFlow .feature files and generates the source code to be included in the compile phase. 
  -->
  <Target
    Name="GenerateSpecFlowCodeFiles"
    DependsOnTargets="$(GenerateSpecFlowCodeFilesDependsOn)"
    Inputs="@(SpecFlowFeatureFiles)"
    Outputs="@(SpecFlowFeatureFiles->'$(SpecFlowGeneratedCodePath)%(Identity)$(DefaultLanguageSourceExtension)')">
    
    <GenerateFeatureFileCodeBehindTask
      ProjectPath="$(MSBuildProjectFullPath)"
      OutputPath="$(SpecFlowGeneratedCodePath)"
      FeatureFiles="@(SpecFlowFeatureFiles)"
      RootNamespace="$(RootNamespace)"
      GeneratorPlugins="@(SpecFlowGeneratorPlugins)" />
   
    <!-- Include the generated files as compile input. -->
    <ItemGroup>
      <Compile Include="@(SpecFlowFeatureFiles->'$(SpecFlowGeneratedCodePath)%(Identity)$(DefaultLanguageSourceExtension)')" />
    </ItemGroup>
  
  </Target>
  
  <!-- 
  Cleans up any intermediary files which may have been generated by the SpecFlow generation process. 
  -->
  <Target Name="CleanGeneratedSpecFlowCodeFiles">
    
    <ItemGroup>
      <SpecFlowGeneratedFilesToDelete Include="$(SpecFlowGeneratedCodePath)*.feature$(DefaultLanguageSourceExtension)" />
    </ItemGroup>
    
    <Delete Files="@(SpecFlowGeneratedFilesToDelete)" ContinueOnError="true" />
  
  </Target>

  <!--
  Ensures that none of the feature files in the project have the code-behind generation tool present.
  -->
  <Target Name="EnsureLegacySpecFlowCodeGenerationIsDisabled">
    <Error
      Text="SpecFlow designer codebehind generation is not compatible with MSBuild codebehind generation. The custom tool must be removed from the file. See http://www.specflow.org/documentation/Generate-Tests-from-MsBuild"
      File="@(None)"
      Condition="('%(None.Extension)' == '.feature' OR '%(None.Extension) == '.feature.xls') AND %(None.Generator) == 'SpecFlowSingleFileGenerator'"/>
  </Target>

</Project>