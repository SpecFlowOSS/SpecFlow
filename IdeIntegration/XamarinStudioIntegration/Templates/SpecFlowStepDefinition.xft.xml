<?xml version="1.0"?>
<Template originator="SineSignal, LLC"
		  created="2010/05/31"
		  lastModified="2010/05/31">
	<!-- Template Header -->
	<TemplateConfiguration>
		<_Name>SpecFlow Step Definition</_Name>
		<Icon>res:SpecFlowStepDefinitionIcon.ico</Icon>
		<_Category>SpecFlow</_Category>
		<LanguageName>C#</LanguageName>
		<_Description>Creates a SpecFlow Step Definition file.</_Description>
	</TemplateConfiguration>
	
	<!-- Template Content -->
	<TemplateFiles>
		<File DefaultExtension=".cs" DefaultName="SpecFlowStepDefinition1">
		<![CDATA[using System;

using TechTalk.SpecFlow;

namespace ${Namespace}
{
    [Binding]
    public class ${Name}
    {
        [Given("I have entered (.*) into the calculator")]
        public void GivenIHaveEnteredSomethingIntoTheCalculator(int number)
        {
            // TODO: implement arrange (recondition) logic
            // For storing and retrieving scenario-specific data, 
            // the instance fields of the class or the
            //     ScenarioContext.Current
            // collection can be used.
            // To use the multiline text or the table argument of the scenario,
            // additional string/Table parameters can be defined on the step definition
            // method. 

            ScenarioContext.Current.Pending();
        }

        [When("I press add")]
        public void WhenIPressAdd()
        {
            // TODO: implement act (action) logic

            ScenarioContext.Current.Pending();
        }

        [Then("the result should be (.*) on the screen")]
        public void ThenTheResultShouldBe(int result)
        {
            // TODO: implement assert (verification) logic
          
            ScenarioContext.Current.Pending();
        }
    }
}
		]]>
		</File>
	</TemplateFiles>
</Template>